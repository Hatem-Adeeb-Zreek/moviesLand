{"version":3,"sources":["assets/images/Logo.png","components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/commons/GridCards.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/Sections/LikeDislikes.js","components/views/MovieDetail/Sections/SingleComment.js","components/views/MovieDetail/Sections/ReplyComment.js","components/views/MovieDetail/Sections/Comments.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["module","exports","API_KEY","API_URL","IMAGE_BASE_URL","auth","type","payload","axios","get","then","response","data","ComposedClass","reload","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","a","isAuth","history","push","isAdmin","googleAuth","MainImage","className","style","background","image","title","text","GridCards","actor","key","movieId","movieName","characterName","lg","md","xs","alt","src","to","Title","Typography","LandingPage","buttonRef","useRef","useState","Movies","setMovies","MainMovieImage","setMainMovieImage","Loading","setLoading","CurrentPage","setCurrentPage","endpoint","fetchMovies","window","addEventListener","handleScroll","removeEventListener","fetch","result","json","results","page","catch","error","console","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","max","scrollHeight","clientHeight","pageYOffset","log","current","click","backdrop_path","original_title","overview","level","gutter","map","movie","index","Fragment","poster_path","id","ref","onClick","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","setItem","userId","removeItem","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","width","Item","prefix","color","placeholder","value","onChange","onBlur","checked","href","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","LeftMenu","mode","userData","status","Logo","require","NavBar","visible","setVisible","position","zIndex","marginTop","placement","closable","onClose","Footer","CopyrightOutlined","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","variable","video","videoId","commentId","Axios","likes","length","like","dislikes","dislike","theme","paddingLeft","cursor","TextArea","Input","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","e","preventDefault","variables","writer","_id","postId","responseTo","comment","content","refreshFunction","actions","author","avatar","display","currentTarget","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","Comments","Comment","setComment","movieTitle","MovieInfo","bordered","release_date","revenue","runtime","vote_average","vote_count","popularity","Favorite","userFrom","movieInfo","moviePost","movieRunTime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","subscribeNumber","subcribed","MovieDetailPage","match","params","Movie","setMovie","Casts","setCasts","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","movieVariable","endpointForMovieInfo","fetchDetailInfo","comments","endpointForCasts","cast","profile_path","newComment","concat","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","favorites","renderCards","favorite","onClickDelete","App","fallback","exact","path","component","Auth","LoginPage","MovieDetail","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39608f49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.19a33176.png\";","//SERVER ROUTES\nexport const USER_SERVER = \"/api/users\";\n\n// MovieDB API config\nexport const API_KEY = \"844dba0bfd8f3a4f3799f6130ef9e335\";\nexport const API_URL = \"https://api.themoviedb.org/3/\";\n\n// Images config from MovieDB\nexport const IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nexport const BACKDROP_SIZE = \"w1280\";\nexport const IMAGE_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nexport const POSTER_SIZE = \"w500\";\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","import React, { useEffect } from \"react\";\nimport { auth } from \"../_actions/user_actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (ComposedClass, reload, adminRoute = null) {\n    function AuthenticationCheck(props) {\n        let user = useSelector((state) => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            dispatch(auth()).then(async (response) => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push(\"/register_login\");\n                    }\n                } else {\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push(\"/\");\n                    } else {\n                        if (reload === false) {\n                            props.history.push(\"/\");\n                        }\n                    }\n                }\n            });\n        }, [dispatch, props.history, user.googleAuth]);\n\n        return <ComposedClass {...props} user={user} />;\n    }\n    return AuthenticationCheck;\n}\n","import React from \"react\";\n\nfunction MainImage(props) {\n    return (\n        <div\n            className=\"main-image-wrapper\"\n            style={{\n                background: `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${props.image}'), #1c1c1c`,\n            }}\n        >\n            <div>\n                <div className=\"main-image-info\">\n                    <h2> {props.title} </h2>\n                    <p> {props.text}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MainImage;\n","import React from \"react\";\nimport { Col } from \"antd\";\nimport { IMAGE_BASE_URL } from \"../Config\";\nimport { Link } from \"react-router-dom\";\n\nfunction GridCards(props) {\n    let { actor, key, image, movieId, movieName, characterName } = props;\n    const POSTER_SIZE = \"w154\";\n\n    if (actor) {\n        return (\n            <Col key={key} lg={6} md={8} xs={24}>\n                <div className=\"grid-container\">\n                    <img\n                        alt={characterName}\n                        src={`${IMAGE_BASE_URL}${POSTER_SIZE}${image}`}\n                    />\n                </div>\n            </Col>\n        );\n    } else {\n        return (\n            <Col key={key} lg={6} md={8} xs={24}>\n                <div className=\"grid-container\">\n                    <Link to={`/movie/${movieId}`}>\n                        <img alt={movieName} src={image} />\n                    </Link>\n                </div>\n            </Col>\n        );\n    }\n}\n\nexport default GridCards;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Typography, Row } from \"antd\";\nimport {\n    API_URL,\n    API_KEY,\n    IMAGE_BASE_URL,\n    IMAGE_SIZE,\n    POSTER_SIZE,\n} from \"../../Config\";\nimport MainImage from \"./Sections/MainImage\";\nimport GridCard from \"../../commons/GridCards\";\n\nconst { Title } = Typography;\n\nfunction LandingPage() {\n    const buttonRef = useRef(null);\n    const [Movies, setMovies] = useState([]);\n    const [MainMovieImage, setMainMovieImage] = useState(null);\n    const [Loading, setLoading] = useState(true);\n    const [CurrentPage, setCurrentPage] = useState(0);\n\n    useEffect(() => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n        fetchMovies(endpoint);\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, []);\n\n    const fetchMovies = (endpoint) => {\n        fetch(endpoint)\n            .then((result) => result.json())\n            .then((result) => {\n                setMovies([...Movies, ...result.results]);\n                setMainMovieImage(MainMovieImage || result.results[0]);\n                setCurrentPage(result.page);\n            }, setLoading(false))\n            .catch((error) => console.error(\"Error:\", error));\n    };\n\n    const loadMoreItems = () => {\n        let endpoint = \"\";\n        setLoading(true);\n        console.log(\"CurrentPage\", CurrentPage);\n        endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\n            CurrentPage + 1\n        }`;\n        fetchMovies(endpoint);\n    };\n\n    const handleScroll = () => {\n        const windowHeight =\n            \"innerHeight\" in window\n                ? window.innerHeight\n                : document.documentElement.offsetHeight;\n        const body = document.body;\n        const html = document.documentElement;\n        const docHeight = Math.max(\n            body.scrollHeight,\n            body.offsetHeight,\n            html.clientHeight,\n            html.scrollHeight,\n            html.offsetHeight\n        );\n        const windowBottom = windowHeight + window.pageYOffset;\n        if (windowBottom >= docHeight - 1) {\n            console.log(\"clicked\");\n            buttonRef.current.click();\n        }\n    };\n\n    return (\n        <div className=\"landing-page-wrapper\">\n            {MainMovieImage && (\n                <MainImage\n                    image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}`}\n                    title={MainMovieImage.original_title}\n                    text={MainMovieImage.overview}\n                />\n            )}\n            <div className=\"fetched-movies\">\n                <Title level={2}> Movies by Latest </Title>\n                <hr />\n                <Row gutter={[16, 16]}>\n                    {Movies &&\n                        Movies.map((movie, index) => (\n                            <React.Fragment key={index}>\n                                <GridCard\n                                    image={\n                                        movie.poster_path\n                                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                                            : null\n                                    }\n                                    movieId={movie.id}\n                                    movieName={movie.original_title}\n                                />\n                            </React.Fragment>\n                        ))}\n                </Row>\n\n                {Loading && <div>Loading...</div>}\n\n                <br />\n                <div className=\"load-more\">\n                    <div id=\"btn\" ref={buttonRef} onClick={loadMoreItems}>\n                        <span>Load More</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LandingPage;\n","import React, { useState } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Form, Icon, Input, Button, Checkbox, Typography } from \"antd\";\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n    const dispatch = useDispatch();\n    const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n    const [formErrorMessage, setFormErrorMessage] = useState(\"\");\n    const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n    const handleRememberMe = () => {\n        setRememberMe(!rememberMe);\n    };\n\n    const initialEmail = localStorage.getItem(\"rememberMe\")\n        ? localStorage.getItem(\"rememberMe\")\n        : \"\";\n\n    return (\n        <Formik\n            initialValues={{\n                email: initialEmail,\n                password: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string()\n                    .email(\"Email is invalid\")\n                    .required(\"Email is required\"),\n                password: Yup.string()\n                    .min(6, \"Password must be at least 6 characters\")\n                    .required(\"Password is required\"),\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    let dataToSubmit = {\n                        email: values.email,\n                        password: values.password,\n                    };\n\n                    dispatch(loginUser(dataToSubmit))\n                        .then((response) => {\n                            if (response.payload.loginSuccess) {\n                                window.localStorage.setItem(\n                                    \"userId\",\n                                    response.payload.userId\n                                );\n                                if (rememberMe === true) {\n                                    window.localStorage.setItem(\n                                        \"rememberMe\",\n                                        values.email\n                                    );\n                                } else {\n                                    localStorage.removeItem(\"rememberMe\");\n                                }\n                                props.history.push(\"/\");\n                            } else {\n                                setFormErrorMessage(\n                                    \"Check out your Account or Password again\"\n                                );\n                            }\n                        })\n                        .catch((err) => {\n                            setFormErrorMessage(\n                                \"Check out your Account or Password again\"\n                            );\n                            setTimeout(() => {\n                                setFormErrorMessage(\"\");\n                            }, 3000);\n                        });\n                    setSubmitting(false);\n                }, 500);\n            }}\n        >\n            {(props) => {\n                const {\n                    values,\n                    touched,\n                    errors,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                } = props;\n                return (\n                    <div className=\"app\">\n                        <Title level={2}>Log In</Title>\n                        <form\n                            onSubmit={handleSubmit}\n                            style={{ width: \"350px\" }}\n                        >\n                            <Form.Item required>\n                                <Input\n                                    id=\"email\"\n                                    prefix={\n                                        <Icon\n                                            type=\"user\"\n                                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                                        />\n                                    }\n                                    placeholder=\"Enter your email\"\n                                    type=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.email && touched.email\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">\n                                        {errors.email}\n                                    </div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required>\n                                <Input\n                                    id=\"password\"\n                                    prefix={\n                                        <Icon\n                                            type=\"lock\"\n                                            style={{ color: \"rgba(0,0,0,.25)\" }}\n                                        />\n                                    }\n                                    placeholder=\"Enter your password\"\n                                    type=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.password && touched.password\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">\n                                        {errors.password}\n                                    </div>\n                                )}\n                            </Form.Item>\n\n                            {formErrorMessage && (\n                                <label>\n                                    <p className=\"form-error-msg\">\n                                        {formErrorMessage}\n                                    </p>\n                                </label>\n                            )}\n\n                            <Form.Item>\n                                <Checkbox\n                                    id=\"rememberMe\"\n                                    onChange={handleRememberMe}\n                                    checked={rememberMe}\n                                >\n                                    Remember me\n                                </Checkbox>\n                                <a\n                                    className=\"login-form-forgot\"\n                                    href=\"/reset_user\"\n                                    style={{ float: \"right\" }}\n                                >\n                                    forgot password\n                                </a>\n                                <div>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className=\"login-form-button\"\n                                        style={{ minWidth: \"100%\" }}\n                                        disabled={isSubmitting}\n                                        onSubmit={handleSubmit}\n                                    >\n                                        Log in\n                                    </Button>\n                                </div>\n                                Or <Link to=\"/register\">register now!</Link>\n                            </Form.Item>\n                        </form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n}\n\nexport default withRouter(LoginPage);\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport { Form, Input, Button } from \"antd\";\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nfunction RegisterPage(props) {\n    const dispatch = useDispatch();\n    return (\n        <Formik\n            initialValues={{\n                email: \"\",\n                lastName: \"\",\n                name: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n            }}\n            validationSchema={Yup.object().shape({\n                name: Yup.string().required(\"Name is required\"),\n                lastName: Yup.string().required(\"Last Name is required\"),\n                email: Yup.string()\n                    .email(\"Email is invalid\")\n                    .required(\"Email is required\"),\n                password: Yup.string()\n                    .min(6, \"Password must be at least 6 characters\")\n                    .required(\"Password is required\"),\n                confirmPassword: Yup.string()\n                    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n                    .required(\"Confirm Password is required\"),\n            })}\n            onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                    let dataToSubmit = {\n                        email: values.email,\n                        password: values.password,\n                        name: values.name,\n                        lastname: values.lastname,\n                        image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n                    };\n\n                    dispatch(registerUser(dataToSubmit)).then((response) => {\n                        if (response.payload.success) {\n                            props.history.push(\"/login\");\n                        } else {\n                            alert(response.payload.err.errmsg);\n                        }\n                    });\n\n                    setSubmitting(false);\n                }, 500);\n            }}\n        >\n            {(props) => {\n                const {\n                    values,\n                    touched,\n                    errors,\n                    // dirty,\n                    isSubmitting,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    // handleReset,\n                } = props;\n                return (\n                    <div className=\"app\">\n                        <h2>Sign up</h2>\n                        <Form\n                            style={{ minWidth: \"375px\" }}\n                            {...formItemLayout}\n                            onSubmit={handleSubmit}\n                        >\n                            <Form.Item required label=\"Name\">\n                                <Input\n                                    id=\"name\"\n                                    placeholder=\"Enter your name\"\n                                    type=\"text\"\n                                    value={values.name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.name && touched.name\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.name && touched.name && (\n                                    <div className=\"input-feedback\">\n                                        {errors.name}\n                                    </div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Last Name\">\n                                <Input\n                                    id=\"lastName\"\n                                    placeholder=\"Enter your Last Name\"\n                                    type=\"text\"\n                                    value={values.lastName}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.lastName && touched.lastName\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.lastName && touched.lastName && (\n                                    <div className=\"input-feedback\">\n                                        {errors.lastName}\n                                    </div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item\n                                required\n                                label=\"Email\"\n                                hasFeedback\n                                validateStatus={\n                                    errors.email && touched.email\n                                        ? \"error\"\n                                        : \"success\"\n                                }\n                            >\n                                <Input\n                                    id=\"email\"\n                                    placeholder=\"Enter your Email\"\n                                    type=\"email\"\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.email && touched.email\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.email && touched.email && (\n                                    <div className=\"input-feedback\">\n                                        {errors.email}\n                                    </div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item\n                                required\n                                label=\"Password\"\n                                hasFeedback\n                                validateStatus={\n                                    errors.password && touched.password\n                                        ? \"error\"\n                                        : \"success\"\n                                }\n                            >\n                                <Input\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                    type=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.password && touched.password\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">\n                                        {errors.password}\n                                    </div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label=\"Confirm\" hasFeedback>\n                                <Input\n                                    id=\"confirmPassword\"\n                                    placeholder=\"Enter your confirmPassword\"\n                                    type=\"password\"\n                                    value={values.confirmPassword}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.confirmPassword &&\n                                        touched.confirmPassword\n                                            ? \"text-input error\"\n                                            : \"text-input\"\n                                    }\n                                />\n                                {errors.confirmPassword &&\n                                    touched.confirmPassword && (\n                                        <div className=\"input-feedback\">\n                                            {errors.confirmPassword}\n                                        </div>\n                                    )}\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button\n                                    onClick={handleSubmit}\n                                    type=\"primary\"\n                                    disabled={isSubmitting}\n                                >\n                                    Submit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n}\n\nexport default RegisterPage;\n","import React from \"react\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction LeftMenu(props) {\n    return (\n        <Menu mode={props.mode}>\n            <Menu.Item key=\"favorite\">\n                <Link to=\"/favorite\">Favorite</Link>\n            </Menu.Item>\n        </Menu>\n    );\n}\n\nexport default LeftMenu;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport { Menu } from \"antd\";\nimport axios from \"axios\";\nimport { USER_SERVER } from \"../../../Config\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n    const user = useSelector((state) => state.user);\n\n    const logoutHandler = () => {\n        axios.get(`${USER_SERVER}/logout`).then((response) => {\n            if (response.status === 200) {\n                props.history.push(\"/login\");\n            } else {\n                alert(\"Log Out Failed\");\n            }\n        });\n    };\n\n    if (user.userData && !user.userData.isAuth) {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"mail\">\n                    <Link to=\"/login\">Signin</Link>\n                </Menu.Item>\n                <Menu.Item key=\"app\">\n                    <Link to=\"/register\">Signup</Link>\n                </Menu.Item>\n            </Menu>\n        );\n    } else {\n        return (\n            <Menu mode={props.mode}>\n                <Menu.Item key=\"logout\">\n                    <Link to=\"/login\" onClick={logoutHandler}>\n                        Logout\n                    </Link>\n                </Menu.Item>\n            </Menu>\n        );\n    }\n}\n\nexport default withRouter(RightMenu);\n","import React, { useState } from \"react\";\nimport LeftMenu from \"./Sections/LeftMenu\";\nimport RightMenu from \"./Sections/RightMenu\";\nimport { Drawer, Button, Icon } from \"antd\";\nimport { Link } from \"react-router-dom\";\nconst Logo = require(\"../../../assets/images/Logo.png\");\n\nfunction NavBar() {\n    const [visible, setVisible] = useState(false);\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <nav\n            className=\"menu\"\n            style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}\n        >\n            <div className=\"menu__logo\">\n                <Link to=\"/\">\n                    <img\n                        src={Logo}\n                        alt=\"Logo\"\n                        style={{ width: \"100%\", marginTop: \"-9px\" }}\n                    />\n                </Link>\n            </div>\n            <div className=\"menu__container\">\n                <div className=\"menu_left\">\n                    <LeftMenu mode=\"horizontal\" />\n                </div>\n                <div className=\"menu_rigth\">\n                    <RightMenu mode=\"horizontal\" />\n                </div>\n                <Button\n                    className=\"menu__mobile-button\"\n                    type=\"primary\"\n                    onClick={showDrawer}\n                >\n                    <Icon type=\"align-right\" />\n                </Button>\n                <Drawer\n                    title=\"Basic Drawer\"\n                    placement=\"right\"\n                    className=\"menu_drawer\"\n                    closable={false}\n                    onClose={onClose}\n                    visible={visible}\n                >\n                    <LeftMenu mode=\"inline\" />\n                    <RightMenu mode=\"inline\" />\n                </Drawer>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { CopyrightOutlined } from \"@ant-design/icons\";\n\nfunction Footer() {\n    return (\n        <div className=\"footer-wrapper\">\n            <p>\n                <CopyrightOutlined /> created by: Hatem Zreek\n            </p>\n        </div>\n    );\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from \"react\";\nimport { Tooltip, Icon } from \"antd\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nfunction LikeDislikes(props) {\n    const user = useSelector((state) => state.user);\n\n    const [Likes, setLikes] = useState(0);\n    const [Dislikes, setDislikes] = useState(0);\n    const [LikeAction, setLikeAction] = useState(null);\n    const [DislikeAction, setDislikeAction] = useState(null);\n    let variable = {};\n\n    if (props.video) {\n        variable = { videoId: props.videoId, userId: props.userId };\n    } else {\n        variable = { commentId: props.commentId, userId: props.userId };\n    }\n\n    useEffect(() => {\n        Axios.post(\"/api/like/getLikes\", variable).then((response) => {\n            console.log(\"getLikes\", response.data);\n\n            if (response.data.success) {\n                //How many likes does this video or comment have\n                setLikes(response.data.likes.length);\n\n                //if I already click this like button or not\n                // eslint-disable-next-line\n                response.data.likes.map((like) => {\n                    if (like.userId === props.userId) {\n                        setLikeAction(\"liked\");\n                    }\n                });\n            } else {\n                alert(\"Failed to get likes\");\n            }\n        });\n\n        Axios.post(\"/api/like/getDislikes\", variable).then((response) => {\n            console.log(\"getDislike\", response.data);\n            if (response.data.success) {\n                //How many likes does this video or comment have\n                setDislikes(response.data.dislikes.length);\n\n                //if I already click this like button or not\n                // eslint-disable-next-line\n                response.data.dislikes.map((dislike) => {\n                    if (dislike.userId === props.userId) {\n                        setDislikeAction(\"disliked\");\n                    }\n                });\n            } else {\n                alert(\"Failed to get dislikes\");\n            }\n        });\n        // eslint-disable-next-line\n    }, []);\n\n    const onLike = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert(\"Please Log in first\");\n        }\n\n        if (LikeAction === null) {\n            Axios.post(\"/api/like/upLike\", variable).then((response) => {\n                if (response.data.success) {\n                    setLikes(Likes + 1);\n                    setLikeAction(\"liked\");\n\n                    //If dislike button is already clicked\n\n                    if (DislikeAction !== null) {\n                        setDislikeAction(null);\n                        setDislikes(Dislikes - 1);\n                    }\n                } else {\n                    alert(\"Failed to increase the like\");\n                }\n            });\n        } else {\n            Axios.post(\"/api/like/unLike\", variable).then((response) => {\n                if (response.data.success) {\n                    setLikes(Likes - 1);\n                    setLikeAction(null);\n                } else {\n                    alert(\"Failed to decrease the like\");\n                }\n            });\n        }\n    };\n\n    const onDisLike = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert(\"Please Log in first\");\n        }\n\n        if (DislikeAction !== null) {\n            Axios.post(\"/api/like/unDisLike\", variable).then((response) => {\n                if (response.data.success) {\n                    setDislikes(Dislikes - 1);\n                    setDislikeAction(null);\n                } else {\n                    alert(\"Failed to decrease dislike\");\n                }\n            });\n        } else {\n            Axios.post(\"/api/like/upDisLike\", variable).then((response) => {\n                if (response.data.success) {\n                    setDislikes(Dislikes + 1);\n                    setDislikeAction(\"disliked\");\n\n                    //If dislike button is already clicked\n                    if (LikeAction !== null) {\n                        setLikeAction(null);\n                        setLikes(Likes - 1);\n                    }\n                } else {\n                    alert(\"Failed to increase dislike\");\n                }\n            });\n        }\n    };\n\n    return (\n        <React.Fragment>\n            <span key=\"comment-basic-like\">\n                <Tooltip title=\"Like\">\n                    <Icon\n                        type=\"like\"\n                        theme={LikeAction === \"liked\" ? \"filled\" : \"outlined\"}\n                        onClick={onLike}\n                    />\n                </Tooltip>\n                <span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>\n                    {Likes}\n                </span>\n            </span>\n            &nbsp;&nbsp;&nbsp;&nbsp;\n            <span key=\"comment-basic-dislike\">\n                <Tooltip title=\"Dislike\">\n                    <Icon\n                        type=\"dislike\"\n                        theme={\n                            DislikeAction === \"disliked\" ? \"filled\" : \"outlined\"\n                        }\n                        onClick={onDisLike}\n                    />\n                </Tooltip>\n                <span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>\n                    {Dislikes}\n                </span>\n            </span>\n        </React.Fragment>\n    );\n}\n\nexport default LikeDislikes;\n","import React, { useState } from \"react\";\nimport { Comment, Avatar, Button, Input } from \"antd\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport LikeDislikes from \"./LikeDislikes\";\nconst { TextArea } = Input;\nfunction SingleComment(props) {\n    const user = useSelector((state) => state.user);\n    const [CommentValue, setCommentValue] = useState(\"\");\n    const [OpenReply, setOpenReply] = useState(false);\n\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value);\n    };\n\n    const openReply = () => {\n        setOpenReply(!OpenReply);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            responseTo: props.comment._id,\n            content: CommentValue,\n        };\n\n        Axios.post(\"/api/comment/saveComment\", variables).then((response) => {\n            if (response.data.success) {\n                setCommentValue(\"\");\n                setOpenReply(!OpenReply);\n                props.refreshFunction(response.data.result);\n            } else {\n                alert(\"Failed to save Comment\");\n            }\n        });\n    };\n\n    const actions = [\n        <LikeDislikes\n            comment\n            commentId={props.comment._id}\n            userId={localStorage.getItem(\"userId\")}\n        />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">\n            Reply to\n        </span>,\n    ];\n\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={<Avatar src={props.comment.writer.image} alt=\"image\" />}\n                content={<p>{props.comment.content}</p>}\n            ></Comment>\n\n            {OpenReply && (\n                <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n                    <TextArea\n                        className=\"comment-area\"\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder=\"write some comments\"\n                    />\n                    <br />\n                    <Button type=\"primary\" onClick={onSubmit}>\n                        Replay\n                    </Button>\n                </form>\n            )}\n        </div>\n    );\n}\n\nexport default SingleComment;\n","import React, { useEffect, useState } from \"react\";\nimport SingleComment from \"./SingleComment\";\n\nfunction ReplyComment(props) {\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0);\n    const [OpenReplyComments, setOpenReplyComments] = useState(false);\n    useEffect(() => {\n        let commentNumber = 0;\n        // eslint-disable-next-line\n        props.CommentLists.map((comment) => {\n            if (comment.responseTo === props.parentCommentId) {\n                commentNumber++;\n            }\n        });\n        setChildCommentNumber(commentNumber);\n    }, [props.CommentLists, props.parentCommentId]);\n\n    let renderReplyComment = (parentCommentId) =>\n        props.CommentLists.map((comment, index) => (\n            <React.Fragment>\n                {comment.responseTo === parentCommentId && (\n                    <div className=\"single-comment\">\n                        <SingleComment\n                            comment={comment}\n                            postId={props.postId}\n                            refreshFunction={props.refreshFunction}\n                        />\n                        <ReplyComment\n                            CommentLists={props.CommentLists}\n                            parentCommentId={comment._id}\n                            postId={props.postId}\n                            refreshFunction={props.refreshFunction}\n                        />\n                    </div>\n                )}\n            </React.Fragment>\n        ));\n\n    const handleChange = () => {\n        setOpenReplyComments(!OpenReplyComments);\n    };\n\n    return (\n        <div>\n            {ChildCommentNumber > 0 && (\n                <p className=\"more-comments\" onClick={handleChange}>\n                    View {ChildCommentNumber} more comment(s)\n                </p>\n            )}\n\n            {OpenReplyComments && renderReplyComment(props.parentCommentId)}\n        </div>\n    );\n}\n\nexport default ReplyComment;\n","import React, { useState } from \"react\";\nimport { Button, Input, Typography } from \"antd\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport SingleComment from \"./SingleComment\";\nimport ReplyComment from \"./ReplyComment\";\nconst { TextArea } = Input;\nconst { Title } = Typography;\nfunction Comments(props) {\n    const user = useSelector((state) => state.user);\n    const [Comment, setComment] = useState(\"\");\n\n    const handleChange = (e) => {\n        setComment(e.currentTarget.value);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (user.userData && !user.userData.isAuth) {\n            return alert(\"Please Log in first\");\n        }\n\n        const variables = {\n            content: Comment,\n            writer: user.userData._id,\n            postId: props.postId,\n        };\n        console.log(variables);\n\n        axios.post(\"/api/comment/saveComment\", variables).then((response) => {\n            if (response.data.success) {\n                setComment(\"\");\n                props.refreshFunction(response.data.result);\n            } else {\n                alert(\"Failed to save Comment\");\n            }\n        });\n    };\n\n    return (\n        <div>\n            <br />\n            <Title level={3}>\n                Share your opinions about {props.movieTitle}\n            </Title>\n            <hr />\n            {/* Comment Lists  */}\n            {console.log(props.CommentLists)}\n\n            {props.CommentLists &&\n                props.CommentLists.map(\n                    (comment, index) =>\n                        !comment.responseTo && (\n                            <React.Fragment>\n                                <SingleComment\n                                    comment={comment}\n                                    postId={props.postId}\n                                    refreshFunction={props.refreshFunction}\n                                />\n                                <ReplyComment\n                                    CommentLists={props.CommentLists}\n                                    postId={props.postId}\n                                    parentCommentId={comment._id}\n                                    refreshFunction={props.refreshFunction}\n                                />\n                            </React.Fragment>\n                        )\n                )}\n\n            {props.CommentLists && props.CommentLists.length === 0 && (\n                <div className=\"comments-wrapper\">\n                    Be the first one who shares your thought about this movie\n                </div>\n            )}\n\n            {/* Root Comment Form */}\n            <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\n                <TextArea\n                    className=\"comment-area\"\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder=\"write some comments\"\n                />\n                <br />\n                <Button type=\"primary\" onClick={onSubmit}>\n                    Submit\n                </Button>\n            </form>\n        </div>\n    );\n}\n\nexport default Comments;\n","import React from \"react\";\nimport { Descriptions } from \"antd\";\n\nfunction MovieInfo(props) {\n    const { movie } = props;\n\n    return (\n        <Descriptions title=\"Movie Info\" bordered>\n            <Descriptions.Item label=\"Title\">\n                {movie.original_title}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"release_date\">\n                {movie.release_date}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"revenue\">\n                {movie.revenue}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"runtime\">\n                {movie.runtime}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"vote_average\" span={2}>\n                {movie.vote_average}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"vote_count\">\n                {movie.vote_count}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"status\">{movie.status}</Descriptions.Item>\n            <Descriptions.Item label=\"popularity\">\n                {movie.popularity}\n            </Descriptions.Item>\n        </Descriptions>\n    );\n}\n\nexport default MovieInfo;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\nimport { useSelector } from \"react-redux\";\n\nfunction Favorite(props) {\n    const user = useSelector((state) => state.user);\n\n    const movieId = props.movieId;\n    const userFrom = props.userFrom;\n    const movieTitle = props.movieInfo.title;\n    const moviePost = props.movieInfo.backdrop_path;\n    const movieRunTime = props.movieInfo.runtime;\n\n    const [FavoriteNumber, setFavoriteNumber] = useState(0);\n    const [Favorited, setFavorited] = useState(false);\n    const variables = {\n        movieId: movieId,\n        userFrom: userFrom,\n        movieTitle: movieTitle,\n        moviePost: moviePost,\n        movieRunTime: movieRunTime,\n    };\n\n    const onClickFavorite = () => {\n        if (user.userData && !user.userData.isAuth) {\n            return alert(\"Please Log in first\");\n        }\n\n        if (Favorited) {\n            //when we are already subscribed\n            axios\n                .post(\"/api/favorite/removeFromFavorite\", variables)\n                .then((response) => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber - 1);\n                        setFavorited(!Favorited);\n                    } else {\n                        alert(\"Failed to Remove From Favorite\");\n                    }\n                });\n        } else {\n            // when we are not subscribed yet\n\n            axios\n                .post(\"/api/favorite/addToFavorite\", variables)\n                .then((response) => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber + 1);\n                        setFavorited(!Favorited);\n                    } else {\n                        alert(\"Failed to Add To Favorite\");\n                    }\n                });\n        }\n    };\n\n    useEffect(() => {\n        axios\n            .post(\"/api/favorite/favoriteNumber\", variables)\n            .then((response) => {\n                if (response.data.success) {\n                    setFavoriteNumber(response.data.subscribeNumber);\n                } else {\n                    alert(\"Failed to get Favorite Number\");\n                }\n            });\n\n        axios.post(\"/api/favorite/favorited\", variables).then((response) => {\n            if (response.data.success) {\n                setFavorited(response.data.subcribed);\n            } else {\n                alert(\"Failed to get Favorite Information\");\n            }\n        });\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={onClickFavorite}>\n                {\" \"}\n                {!Favorited ? \"Add to Favorite\" : \"Remove from Favorite\"}\n                {FavoriteNumber}\n            </Button>\n        </>\n    );\n}\n\nexport default Favorite;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Button } from \"antd\";\nimport axios from \"axios\";\n\nimport Comments from \"./Sections/Comments\";\nimport LikeDislikes from \"./Sections/LikeDislikes\";\nimport { API_URL, API_KEY, IMAGE_BASE_URL, IMAGE_SIZE } from \"../../Config\";\nimport GridCards from \"../../commons/GridCards\";\nimport MainImage from \"../../views/LandingPage/Sections/MainImage\";\nimport MovieInfo from \"./Sections/MovieInfo\";\nimport Favorite from \"./Sections/Favorite\";\n\nfunction MovieDetailPage(props) {\n    const movieId = props.match.params.movieId;\n    const [Movie, setMovie] = useState([]);\n    const [Casts, setCasts] = useState([]);\n    const [CommentLists, setCommentLists] = useState([]);\n    const [LoadingForMovie, setLoadingForMovie] = useState(true);\n    const [LoadingForCasts, setLoadingForCasts] = useState(true);\n    const [ActorToggle, setActorToggle] = useState(false);\n    const movieVariable = {\n        movieId: movieId,\n    };\n\n    useEffect(() => {\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n        fetchDetailInfo(endpointForMovieInfo);\n        axios\n            .post(\"/api/comment/getComments\", movieVariable)\n            .then((response) => {\n                console.log(response);\n                if (response.data.success) {\n                    console.log(\n                        \"response.data.comments\",\n                        response.data.comments\n                    );\n                    setCommentLists(response.data.comments);\n                } else {\n                    alert(\"Failed to get comments Info\");\n                }\n            });\n        // eslint-disable-next-line\n    }, []);\n\n    const toggleActorView = () => {\n        setActorToggle(!ActorToggle);\n    };\n\n    const fetchDetailInfo = (endpoint) => {\n        fetch(endpoint)\n            .then((result) => result.json())\n            .then((result) => {\n                console.log(result);\n                setMovie(result);\n                setLoadingForMovie(false);\n\n                let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n                fetch(endpointForCasts)\n                    .then((result) => result.json())\n                    .then((result) => {\n                        console.log(result);\n                        setCasts(result.cast);\n                    });\n\n                setLoadingForCasts(false);\n            })\n            .catch((error) => console.error(\"Error:\", error));\n    };\n\n    const updateComment = (newComment) => {\n        setCommentLists(CommentLists.concat(newComment));\n    };\n\n    return (\n        <div>\n            {/* Header */}\n            {!LoadingForMovie ? (\n                <MainImage\n                    image={`${IMAGE_BASE_URL}${IMAGE_SIZE}${Movie.backdrop_path}`}\n                    title={Movie.original_title}\n                    text={Movie.overview}\n                />\n            ) : (\n                <div>loading...</div>\n            )}\n\n            {/* Body */}\n            <div className=\"movie-detail\">\n                {/* Favorite */}\n                <div className=\"favorite-wrapper\">\n                    <Favorite\n                        movieInfo={Movie}\n                        movieId={movieId}\n                        userFrom={localStorage.getItem(\"userId\")}\n                    />\n                </div>\n                {/* Movie Info */}\n                {!LoadingForMovie ? (\n                    <MovieInfo movie={Movie} />\n                ) : (\n                    <div>loading...</div>\n                )}\n\n                <br />\n                {/* Actors Grid*/}\n\n                <div className=\"actor-grid\">\n                    <Button type=\"primary\" onClick={toggleActorView}>\n                        Toggle Actor View\n                    </Button>\n                </div>\n\n                {ActorToggle && (\n                    <Row gutter={[16, 16]}>\n                        {!LoadingForCasts ? (\n                            Casts.map(\n                                (cast, index) =>\n                                    cast.profile_path && (\n                                        <GridCards\n                                            actor\n                                            image={cast.profile_path}\n                                            characterName={cast.characterName}\n                                        />\n                                    )\n                            )\n                        ) : (\n                            <div>loading...</div>\n                        )}\n                    </Row>\n                )}\n                <br />\n                <div className=\"like-wrapper\">\n                    <LikeDislikes\n                        video\n                        videoId={movieId}\n                        userId={localStorage.getItem(\"userId\")}\n                    />\n                </div>\n\n                {/* Comments */}\n                <Comments\n                    movieTitle={Movie.original_title}\n                    CommentLists={CommentLists}\n                    postId={movieId}\n                    refreshFunction={updateComment}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default MovieDetailPage;\n","import React, { useEffect, useState } from \"react\";\nimport { Typography, Popover, Button } from \"antd\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../Config\";\nimport { Link } from \"react-router-dom\";\n\nconst { Title } = Typography;\n\nfunction FavoritePage() {\n    const user = useSelector((state) => state.user);\n\n    const [Favorites, setFavorites] = useState([]);\n    const [Loading, setLoading] = useState(true);\n    let variable = { userFrom: localStorage.getItem(\"userId\") };\n\n    useEffect(() => {\n        fetchFavoredMovie();\n        // eslint-disable-next-line\n    }, []);\n\n    const fetchFavoredMovie = () => {\n        axios\n            .post(\"/api/favorite/getFavoredMovie\", variable)\n            .then((response) => {\n                if (response.data.success) {\n                    console.log(response.data.favorites);\n                    setFavorites(response.data.favorites);\n                    setLoading(false);\n                } else {\n                    alert(\"Failed to get subscription videos\");\n                }\n            });\n    };\n\n    const onClickDelete = (movieId, userFrom) => {\n        const variables = {\n            movieId: movieId,\n            userFrom: userFrom,\n        };\n\n        axios\n            .post(\"/api/favorite/removeFromFavorite\", variables)\n            .then((response) => {\n                if (response.data.success) {\n                    fetchFavoredMovie();\n                } else {\n                    alert(\"Failed to Remove From Favorite\");\n                }\n            });\n    };\n\n    const renderCards = Favorites.map((favorite, index) => {\n        const content = (\n            <div>\n                {favorite.moviePost ? (\n                    <img\n                        src={`${IMAGE_BASE_URL}${POSTER_SIZE}${favorite.moviePost}`}\n                        alt=\"favorite_movie_image\"\n                    />\n                ) : (\n                    \"no image\"\n                )}\n            </div>\n        );\n\n        return (\n            <tr key={index}>\n                <Popover content={content} title={`${favorite.movieTitle}`}>\n                    <td>{favorite.movieTitle}</td>\n                </Popover>\n\n                <td>{favorite.movieRunTime} mins</td>\n                <td>\n                    <Button\n                        type=\"primary\"\n                        onClick={() =>\n                            onClickDelete(favorite.movieId, favorite.userFrom)\n                        }\n                    >\n                        Remove\n                    </Button>\n                </td>\n            </tr>\n        );\n    });\n\n    return (\n        <div className=\"favorite-wrapper\">\n            <Title level={2}> Favorite Movies By Me </Title>\n            <hr />\n            {user.userData && !user.userData.isAuth ? (\n                <div className=\"favorite-box\">\n                    <p>Please Log in first...</p>\n                    <Link to=\"/login\">Go to Login page</Link>\n                </div>\n            ) : (\n                !Loading && (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Movie Title</th>\n                                <th>Movie RunTime</th>\n                                <td>Remove from favorites</td>\n                            </tr>\n                        </thead>\n                        <tbody>{renderCards}</tbody>\n                    </table>\n                )\n            )}\n        </div>\n    );\n}\n\nexport default FavoritePage;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport MovieDetail from \"./views/MovieDetail/MovieDetail\";\nimport FavoritePage from \"./views/FavoritePage/FavoritePage\";\n\nfunction App() {\n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <NavBar />\n            <div className=\"app-div\">\n                <Switch>\n                    <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n                    <Route\n                        exact\n                        path=\"/login\"\n                        component={Auth(LoginPage, false)}\n                    />\n                    <Route\n                        exact\n                        path=\"/register\"\n                        component={Auth(RegisterPage, false)}\n                    />\n                    <Route\n                        exact\n                        path=\"/movie/:movieId\"\n                        component={Auth(MovieDetail, null)}\n                    />\n                    <Route\n                        exact\n                        path=\"/favorite\"\n                        component={Auth(FavoritePage, null)}\n                    />\n                </Switch>\n            </div>\n            <Footer />\n        </Suspense>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import \"react-app-polyfill/ie9\";\nimport \"react-app-polyfill/ie11\";\nimport \"core-js\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from \"./_reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n    promiseMiddleware,\n    ReduxThunk\n)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n                window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}